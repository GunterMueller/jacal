From: "Barak A. Pearlmutter" <barak+git@cs.nuim.ie>
Date: Tue, 10 Dec 2013 10:49:07 +0000
Subject: update texinfo

---
 jacal.texi | 25 ++++++++++++++++---------
 1 file changed, 16 insertions(+), 9 deletions(-)

diff --git a/jacal.texi b/jacal.texi
index 9d88188..fc51bae 100644
--- a/jacal.texi
+++ b/jacal.texi
@@ -343,7 +343,7 @@ end-of-file character will terminate the session.
 
 With the standard input grammar, the precedence of @samp{-} as a prefix
 behaves strangely.  @code{a^-b*c} becomes @code{a^(-b*c)} while
-@code{@result{a^b*c} (a^b)*c}.
+@code{a^b*c @result{} (a^b)*c}.
 
 Using @code{divide} to divide a polynomial by an integer does not work.
 
@@ -674,8 +674,9 @@ e1 : suchthat(x, e0);
 e1: ---------
         a
 @end example
+@end deffn
 
-@deffnx Command suchthat var exp
+@deffn Command suchthat var exp
 
 If an expression rather than an equation is given to @code{suchthat}, it
 is as though the equation @code{@var{exp}=0} was given.
@@ -687,8 +688,9 @@ e2 : suchthat(x, e0);
 e2: ---------
         a
 @end example
+@end deffn
 
-@deffnx Operator | var exp_or_eqn
+@deffn Operator | var exp_or_eqn
 
 An alternative infix notation is also available for @code{suchthat}.
 
@@ -856,8 +858,9 @@ and the @code{imagpart} of @var{z}.
 
 Returns the degree of polynomial or equation @var{poly} in variable
 @var{var}.
+@end deffn
 
-@deffnx Operator degree poly
+@deffn Operator degree poly
 
 Returns the total-degree, the degree of its highest degree monomial,
 of polynomial or equation @var{poly}.
@@ -1015,10 +1018,12 @@ e15: [- x - y + z, 2 x  + 2 x y + 2 y ]
 Returns @var{poly1} reduced with respect to @var{poly2} (or @var{eqn})
 and @var{var}.  If @var{poly2} is univariate, the third argument is not
 needed.
+@end deffn
 
-@deffnx Command mod poly1 n
+@deffn Command mod poly1 n
 Returns @var{poly1} with all the coefficients taken modulo @var{n}.
-@deffnx Command mod poly1
+@end deffn
+@deffn Command mod poly1
 Returns @var{poly1} with all the coefficients taken modulo the
 current modulus.
 
@@ -1141,8 +1146,9 @@ e1 : factor(-120);
 e1: -1 2  3 5
 @end group
 @end example
+@end deffn
 
-@deffnx Command factor polyratio
+@deffn Command factor polyratio
 Given a univariate ratio of polynomials @var{polyratio}, returns a
 matrix of factors and exponents.
 
@@ -1909,7 +1915,7 @@ the sum of the inputs' ranks, and the components of the result are
 formed from the pair-wise products of components of the inputs.  For
 example, for the input tensors @code{x[a,b]} and @code{y[c]}
 @example
-@result{z:tmult(x,y);} z[a,b,c] = x[a,b]*y[c]
+z:tmult(x,y); @result{} z[a,b,c] = x[a,b]*y[c]
 @end example
 
 With an additional argument, @code{tmult} will produce the inner product
@@ -2262,8 +2268,9 @@ to the Jacal session where you left off by simply typing @code{(math)}.
 If you do not wish to return to Jacal but really want to terminate the
 session and return to the operating system, then after typing
 @code{qed();}, type @code{(slib:exit)} or use @code{quit}.
+@end deffn
 
-@deffnx Command quit
+@deffn Command quit
 Exit directly from Jacal to the operating system.  You will not be able
 to continue your Jacal session.
 
